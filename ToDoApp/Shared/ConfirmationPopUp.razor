@if (ShowConfirmation)
{
    <div class="modal fade show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button @onclick="() => OnConfirmationChanged(false)" type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" @onclick="() => OnConfirmationChanged(false)" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" @onclick="() => OnConfirmationChanged(true)" class="btn btn-primary">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    public bool ShowConfirmation { get; set; }

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    //pops up when clicked on x,delete or cancel
    protected async Task OnConfirmationChanged(bool value)
    {
        //close convirmation dialog
        ShowConfirmation = false;
        //raising ConfirmationChanged event
        await ConfirmationChanged.InvokeAsync(value);
    }
}