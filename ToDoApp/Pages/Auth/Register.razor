@page "/auth/register"
@using ToDoApp.Shared.Models;
@layout AuthLayout
@inject AuthentificationService authService
@inject NavigationManager navigation

<div class="row">
    <div class="col-12">
        <h2>Welcome to ToDoApp!</h2>
        <h3>Create a new account</h3>

        <EditForm Model="registerRequest" OnValidSubmit="RegisterUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <RadzenCard>
                <AlertMessage Message="@message" MessageType="@messageType"></AlertMessage>
                @if (!string.IsNullOrEmpty(message))
                {
                    <div class="alert alert-info">@message</div>
                    if (errors != null)
                    {
                        foreach (string err in errors)
                        {
                            <div style="color:red">@err</div>
                        }
                    }
                }
                <label>First Name</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.FirstName"></Radzen.Blazor.RadzenTextBox>

                <label>Last Name</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.LastName"></Radzen.Blazor.RadzenTextBox>

                <label>Email</label>
                <Radzen.Blazor.RadzenTextBox @bind-Value="registerRequest.Email"></Radzen.Blazor.RadzenTextBox>

                <label>Password</label>
                <Radzen.Blazor.RadzenPassword @bind-Value="registerRequest.Password"></Radzen.Blazor.RadzenPassword>

                <label>Confirm Password</label>
                <Radzen.Blazor.RadzenPassword @bind-Value="registerRequest.ConfirmPassword"></Radzen.Blazor.RadzenPassword>

                <hr />

                <Radzen.Blazor.RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Register"
                                            ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2" Disabled="isBusy" />

                <Radzen.Blazor.RadzenButton ButtonType="Radzen.ButtonType.Button" Text="Login"
                                            ButtonStyle="Radzen.ButtonStyle.Secondary" class="btn-block mr-2" Disabled="isBusy" />
            </RadzenCard>

        </EditForm>

    </div>

</div>

@code {
    RegisterRequest registerRequest = new RegisterRequest();

    bool isBusy = false;
    string message = string.Empty;
    Models.AlertMessageType messageType = Models.AlertMessageType.Success;
    string[] errors;

    public async Task RegisterUser()
    {
        isBusy = true;
        var result = await authService.RegisterUserAsync(registerRequest);
        if (result.IsSuccess)
        {
            message = result.Message;
            messageType = Models.AlertMessageType.Success;
            errors = null;
        }
        else
        {
            message = result.Message;
            errors = result.Errors;
        }
        isBusy = false;
    }
}
